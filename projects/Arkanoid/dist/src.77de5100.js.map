{"version":3,"sources":["view/CanvasView.ts","index.ts"],"names":[],"mappings":"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","file":"src.77de5100.js","sourceRoot":"..\\src","sourcesContent":["// Types\r\nimport { Brick } from '../sprites/Brick';\r\nimport { Paddle } from '../sprites/Paddle';\r\nimport { Ball } from '../sprites/Ball';\r\nimport { BRICK_IMAGES } from '~/setup';\r\n\r\nexport class CanvasView {\r\n    canvas: HTMLCanvasElement;\r\n    private context: CanvasRenderingContext2D | null;\r\n    private scoreDisplay: HTMLObjectElement | null;\r\n    private start: HTMLObjectElement | null;\r\n    private info: HTMLObjectElement | null;\r\n\r\n    constructor(canvasName: string) {\r\n        this.canvas = document.querySelector(canvasName) as HTMLCanvasElement;\r\n        this.context = this.canvas.getContext('2d');\r\n        this.scoreDisplay = document.querySelector('#score');\r\n        this.start = document.querySelector('#start');\r\n        this.info = document.querySelector('#info');\r\n    }\r\n\r\n    clear(): void {\r\n        this.context?.clearRect(0, 0, this.canvas.width, this.canvas.height);//?optional undefined\r\n    }\r\n\r\n    initStartButton(startFunction: (view: CanvasView) => void): void {\r\n        this.start?.addEventListener('click', () => startFunction(this));\r\n    }\r\n\r\n    drawScore(score: number): void {\r\n        if (this.scoreDisplay) this.scoreDisplay.innerHTML = score.toString();\r\n    }\r\n\r\n    drawInfo(text: string): void {\r\n        if (this.info) this.info.innerHTML = text;\r\n    }\r\n\r\n    drawSprite(brick: Brick | Paddle | Ball): void {\r\n        if (!brick) return;\r\n\r\n        this.context?.drawImage(\r\n            brick.image,\r\n            brick.pos.x,\r\n            brick.pos.y,\r\n            brick.width,\r\n            brick.height,\r\n        );\r\n    }\r\n\r\n    drawBricks(bricks: Brick[]): void {\r\n        bricks.forEach(brick => this.drawSprite(brick));\r\n    }\r\n}","import { CanvasView } from './view/CanvasView';\nimport { Ball } from './sprites/Ball';\nimport { Brick } from './sprites/Brick';\nimport { Paddle } from './sprites/Paddle';\n// Images\nimport P_IMG from './images/paddle.png';\nimport BL_IMG from './images/ball.png';\n// Level and colors\nimport {\n    PADDLE_SPEED,\n    PADDLE_WIDTH,\n    PADDLE_HEIGHT,\n    PADDLE_STARTX,\n    BALL_SPEED,\n    BALL_SIZE,\n    BALL_STARTX,\n    BALL_STARTY\n} from './setup';\n\nlet gameOver = false;\nlet score = 0;\n\nfunction setGameOver(view: CanvasView) {\n    view.drawInfo('Game Over!');\n    gameOver = false;\n}\n\nfunction setGameWin(view: CanvasView) {\n    view.drawInfo('Game Won!');\n    gameOver = false;\n}\n\nfunction gameLoop(\n    view: CanvasView,\n    bricks: Brick[],\n    paddle: Paddle,\n    ball: Ball\n) {}\n\nfunction startGame(view: CanvasView) {}\n\n// Create a new view\nconst view = new CanvasView('#playField');\nview.initStartButton(startGame);"]}